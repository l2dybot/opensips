	<section id="param_pn_enable" xreflabel="pn_enable">
		<title><varname>pn_enable</varname> (boolean)</title>
		<para>
			Enable SIP Push Notifications support (<ulink url="https://tools.ietf.org/html/rfc8599"><citetitle>RFC 8599</citetitle></ulink>).
			If enabled, contacts URIs which include all
			<xref linkend="param_pn_ct_match_params"/> will be matched against
			existing bindings using only these parameters.  Otherwise,
			the module will attempt to match them as usual, using the current
			<emphasis>matching_mode</emphasis>.
		</para>
		<para>
			<emphasis>
				Default value is <emphasis>false</emphasis>.
			</emphasis>
		</para>

		<example>
		<title>Setting the <varname>pn_enable</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("registrar", "pn_enable", true)
...
</programlisting>
		</example>
	</section>

	<section id="param_pn_providers" xreflabel="pn_providers">
		<title><varname>pn_providers</varname> (string)</title>
		<para>
		A list of supported Push Notification providers.  While only three
		possible values are defined by RFC 8599 ("apns", "fcm" and "webpush"),
		non-standard values may be specified as well.
		</para>
		<para>
			<emphasis>
				Default value is <emphasis>NULL (not set)</emphasis>.
			</emphasis>
		</para>

		<example>
		<title>Setting the <varname>pn_providers</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("registrar", "pn_providers", "apns, fcm, webpush")
...
</programlisting>
		</example>
	</section>

	<section id="param_pn_ct_match_params" xreflabel="pn_ct_match_params">
		<title><varname>pn_ct_match_params</varname> (string)</title>
		<para>
			The minimally required list of RFC 8599 parameters (custom ones are
			accepted as well) which must be present in a Contact URI and
			identically matching an existing binding in order for the binding
			to be refreshed.  If at least one such parameter is missing from a
			Contact header field URI, the module will fall back to performing
			regular contact matching.
		</para>
		<para>
			Note that if all above PN Contact URI parameters match an existing
			binding, the match is considered to be successful regardless if
			other parts of the SIP URI do not match (e.g. hostname, port,
			other URI parameters, etc.).
		</para>
		<para>
			After calling <xref linkend="func_lookup"/>, the above PN-related
			parameters will be automatically stripped from the resulting
			Request URI(s).
		</para>
		<para>
			<emphasis>
				Default value is <emphasis>"pn-provider, pn-prid, pn-param"</emphasis>.
			</emphasis>
		</para>

		<example>
		<title>Setting the <varname>pn_ct_match_params</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("registrar", "pn_ct_match_params", "pn-provider, pn-prid")
...
</programlisting>
		</example>
	</section>

	<section id="param_pn_pnsreg_interval" xreflabel="pn_pnsreg_interval">
		<title><varname>pn_pnsreg_interval</varname> (integer)</title>
		<para>
			For devices capable of waking up and refreshing their binding on
			their own (signified by the ";+sip.pnsreg" Contact header field
			parameter), this setting denotes the prior-to-expiration interval
			advertised by the server at which the device should issue its
			binding refresh request.
		</para>
		<para>
			<emphasis>
				Default value is <emphasis>130 (seconds before expiry)</emphasis>.
			</emphasis>
		</para>

		<example>
		<title>Setting the <varname>pn_pnsreg_interval</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("registrar", "pn_pnsreg_interval", 140)
...
</programlisting>
		</example>
	</section>

	<section id="param_pn_trigger_interval" xreflabel="pn_trigger_interval">
		<title><varname>pn_trigger_interval</varname> (integer)</title>
		<para>
			If a binding refresh REGISTER request from a given SIP endpoint does
			not arrive within at least <xref linkend="param_pn_trigger_interval"/>
			seconds prior to expiration (e.g. because the device does not
			support ";+sip.pnsreg" or because of other error conditions), the
			E_UL_CONTACT_REFRESH usrloc event will be triggered.
		</para>
		<para>
			Once E_UL_CONTACT_REFRESH is triggered, the script writer should use
			the RFC 8599 parameters from the Contact URI in order to generate a
			Push Notification request to the PN provider of the device, in
			order to cause the device to wake up and re-register.
		</para>
		<para>
			<emphasis>
				Default value is <emphasis>120 (seconds before expiry)</emphasis>.
			</emphasis>
		</para>

		<example>
		<title>Setting the <varname>pn_trigger_interval</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("registrar", "pn_trigger_interval", 130)
...
</programlisting>
		</example>
	</section>

	<section id="param_pn_skip_pn_interval" xreflabel="pn_skip_pn_interval">
		<title><varname>pn_skip_pn_interval</varname> (integer)</title>
		<para>
			Following a successful (re)registration of a contact, this setting
			denotes a time interval, in seconds, during which the contact is
			assumed to be reachable, so any Push Notifications will be skipped.
		</para>
		<para>
			<emphasis>
				Default value is <emphasis>0 seconds (always generate Push
					Notifications)</emphasis>.
			</emphasis>
		</para>

		<example>
		<title>Setting the <varname>pn_skip_pn_interval</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("registrar", "pn_skip_pn_interval", 10)
...
</programlisting>
		</example>
	</section>

	<section id="param_pn_inv_timeout" xreflabel="pn_inv_timeout">
		<title><varname>pn_inv_timeout</varname> (integer)</title>
		<para>
			This timeout starts counting following a <xref linkend="func_lookup"/>
			which triggers at least one Push Notification.  The value
			represents the maximum allowed time for the Push Notifications and
			their corresponding re-registrations from the awoken SIP UA to take
			place.
		</para>
		<para>
			Once this timeout is exceeded for the pending INVITE, any
			further re-registrations corresponding to the pending Push
			Notifications will no longer cause the INVITE to automatically
			fork out to the registering devices.
		</para>
		<para>
			<emphasis>
				Default value is <emphasis>6 seconds</emphasis>.
			</emphasis>
		</para>

		<example>
		<title>Setting the <varname>pn_inv_timeout</varname> parameter</title>
		<programlisting format="linespecific">
...
modparam("registrar", "pn_inv_timeout", 5)
...
</programlisting>
		</example>
	</section>
